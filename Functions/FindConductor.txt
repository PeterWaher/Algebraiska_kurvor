FindConductor := proc(Generators)
	local Conductor, l, MinValue, NrGenerators, g, ZMin, GCD, a, b, c, d, e, StartTime;

	StartTime := time();

	if not type(Generators, list) then
		ERROR("Generators must be a list of integers!", Generators)
	end if;

	l := FindGCDList(Generators);
	if l[1] <> 1 then
		ERROR("The Generators must not have a common divisor greater than 1!", [Generators, l[1]])
	end if;

	NrGenerators := nops(Generators);
	MinValue := min(op(Generators));
	ZMin := array(0..MinValue - 1);
	ZMin[0] := MinValue;

	for l from 1 to MinValue - 1 do
		ZMin[l] := 0
	end do;

	for l to NrGenerators do
		g := Generators[l];
		if g <> MinValue then
			GCD := gcd(g, MinValue);
			b := MinValue/GCD;
			for e from 0 to MinValue do
				if e = MinValue then
					c := 0
				elif ZMin[e] <> 0 then
					c := ZMin[e]
				else
					c := -1
				end if;

				if 0 <= c then
					for a to b do
						c := c + g;
						d := c mod MinValue;
						if ZMin[d] = 0 or c < ZMin[d] then
							ZMin[d] := c
						end if
					end do
				end if
			end do
		end if
	end do;

	Conductor := ZMin[0];
	for a to MinValue - 1 do
		if Conductor < ZMin[a] then
			Conductor := ZMin[a]
		end if
	end do;

	Conductor := Conductor - MinValue + 1;

	if nargs = 1 or args[2] then
		printf("Elapsed Time: %0.3f s.\n", time() - StartTime)
	end if;

	RETURN(Conductor)
end proc