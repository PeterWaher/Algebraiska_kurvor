%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 256 575 535
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: den 2 oktober 2015 kl 18:51 CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
805 403 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
805.000 0 l
805.000 403.000 l
0 403.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 805 403 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 795 393 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
7.00000 w
[ 9.00000 22.5000 ] 0 d
0 0 1.00000 RG
95.2845 -4.99742 604.430 401.997 rc
newpath
397.000 364.761 m
388.656 364.669 l
381.404 364.440 l
373.263 364.016 l
365.094 363.413 l
356.997 362.637 l
349.527 361.763 l
341.838 360.700 l
333.942 359.434 l
326.136 358.004 l
318.182 356.361 l
311.248 354.769 l
303.528 352.818 l
295.877 350.691 l
288.606 348.484 l
282.098 346.347 l
274.483 343.647 l
268.143 341.224 l
260.904 338.254 l
254.625 335.491 l
247.882 332.317 l
241.609 329.161 l
235.224 325.730 l
229.510 322.459 l
223.515 318.806 l
217.477 314.877 l
212.385 311.350 l
207.060 307.431 l
201.756 303.267 l
196.766 299.085 l
192.130 294.940 l
187.209 290.229 l
182.995 285.903 l
178.718 281.192 l
175.045 276.844 l
171.251 272.010 l
167.899 267.388 l
164.623 262.488 l
161.648 257.632 l
158.779 252.484 l
156.255 247.470 l
153.920 242.290 l
151.853 237.106 l
150.172 232.307 l
148.507 226.768 l
147.255 221.785 l
146.168 216.447 l
145.368 211.319 l
144.757 205.609 l
144.463 200.656 l
144.396 195.030 l
144.581 189.903 l
145.051 184.303 l
145.682 179.481 l
146.654 174.008 l
147.847 168.743 l
149.290 163.510 l
150.973 158.329 l
152.820 153.387 l
155.068 148.089 l
157.452 143.088 l
160.213 137.881 l
162.932 133.221 l
166.177 128.137 l
169.519 123.336 l
173.076 118.619 l
177.028 113.774 l
180.876 109.390 l
185.021 104.982 l
189.834 100.217 l
194.399 96.0001 l
199.268 91.7861 l
204.422 87.6080 l
209.335 83.8665 l
214.752 79.9866 l
220.307 76.2504 l
226.440 72.3839 l
232.011 69.0870 l
238.616 65.4209 l
244.735 62.2428 l
250.930 59.2230 l
257.742 56.1172 l
264.732 53.1496 l
271.215 50.5837 l
278.223 48.0011 l
285.177 45.6247 l
292.836 43.2119 l
299.558 41.2631 l
307.379 39.1864 l
314.823 37.3934 l
322.274 35.7717 l
329.803 34.3037 l
337.548 32.9676 l
345.824 31.7304 l
353.462 30.7593 l
361.043 29.9547 l
369.183 29.2647 l
377.335 28.7521 l
384.670 28.4420 l
393.371 28.2588 l
400.656 28.2591 l
409.172 28.4369 l
417.287 28.7850 l
424.515 29.2426 l
432.616 29.9223 l
440.733 30.7822 l
448.766 31.8123 l
456.165 32.9216 l
463.770 34.2257 l
471.568 35.7392 l
479.263 37.4133 l
487.091 39.3057 l
493.904 41.1142 l
501.477 43.3067 l
508.968 45.6729 l
516.074 48.1069 l
522.423 50.4460 l
529.838 53.3840 l
535.998 56.0036 l
543.018 59.1987 l
549.093 62.1567 l
555.603 65.5392 l
561.645 68.8903 l
567.779 72.5185 l
573.254 75.9656 l
578.983 79.8038 l
584.734 83.9184 l
589.571 87.6027 l
594.611 91.6852 l
599.613 96.0115 l
604.300 100.346 l
608.636 104.632 l
613.217 109.493 l
617.118 113.947 l
621.056 118.788 l
624.416 123.247 l
627.861 128.196 l
630.882 132.917 l
633.806 137.916 l
636.432 142.860 l
638.933 148.093 l
641.097 153.181 l
643.061 158.428 l
644.758 163.671 l
646.095 168.519 l
647.365 174.104 l
648.261 179.120 l
648.968 184.486 l
649.402 189.634 l
649.607 195.357 l
649.548 200.314 l
649.215 205.936 l
648.667 211.051 l
647.799 216.630 l
646.826 221.426 l
645.466 226.863 l
643.899 232.084 l
642.087 237.266 l
640.037 242.389 l
637.841 247.267 l
635.219 252.488 l
632.482 257.408 l
629.354 262.522 l
626.307 267.091 l
622.704 272.067 l
619.025 276.757 l
615.136 281.357 l
610.845 286.072 l
606.689 290.330 l
602.235 294.602 l
597.090 299.209 l
592.230 303.278 l
587.067 307.334 l
581.622 311.345 l
576.448 314.927 l
570.761 318.632 l
564.947 322.189 l
558.546 325.857 l
552.747 328.975 l
545.889 332.429 l
539.551 335.410 l
533.148 338.231 l
526.122 341.119 l
518.930 343.863 l
512.271 346.221 l
505.088 348.580 l
497.973 350.734 l
490.151 352.903 l
483.298 354.638 l
475.338 356.465 l
467.775 358.022 l
460.218 359.407 l
452.593 360.635 l
444.761 361.726 l
436.407 362.701 l
428.707 363.430 l
421.078 363.994 l
412.898 364.427 l
404.719 364.682 l
397.000 364.761 l
S
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
100.284 2.57063E-3 594.430 391.997 rc
newpath
102.284 252.287 m
105.383 242.663 l
108.080 234.687 l
111.112 226.136 l
114.164 217.949 l
117.202 210.197 l
120.019 203.342 l
122.935 196.563 l
125.952 189.875 l
128.958 183.515 l
132.051 177.274 l
134.775 172.018 l
137.841 166.353 l
140.920 160.921 l
143.888 155.914 l
146.582 151.550 l
149.786 146.577 l
152.501 142.537 l
155.658 138.027 l
158.453 134.195 l
161.519 130.154 l
164.439 126.458 l
167.486 122.751 l
170.283 119.474 l
173.301 116.068 l
176.436 112.666 l
179.164 109.810 l
182.111 106.832 l
185.156 103.866 l
188.134 101.066 l
191.016 98.4505 l
194.216 95.6466 l
197.091 93.2138 l
200.161 90.7027 l
202.943 88.5008 l
205.984 86.1703 l
208.846 84.0475 l
211.837 81.8981 l
214.761 79.8627 l
217.823 77.7989 l
220.771 75.8735 l
223.787 73.9653 l
226.777 72.1314 l
229.525 70.4956 l
232.674 68.6771 l
235.491 67.0997 l
238.495 65.4674 l
241.369 63.9512 l
244.561 62.3189 l
247.325 60.9478 l
250.462 59.4375 l
253.321 58.1026 l
256.449 56.6863 l
259.147 55.5003 l
262.220 54.1890 l
265.189 52.9613 l
268.155 51.7717 l
271.111 50.6225 l
273.951 49.5518 l
277.020 48.4302 l
279.946 47.3951 l
283.025 46.3407 l
285.812 45.4165 l
288.892 44.4279 l
291.843 43.5129 l
294.786 42.6304 l
297.861 41.7406 l
300.692 40.9494 l
303.592 40.1669 l
306.794 39.3349 l
309.693 38.6102 l
312.657 37.8969 l
315.673 37.1998 l
318.444 36.5839 l
321.398 35.9534 l
324.330 35.3539 l
327.466 34.7412 l
330.234 34.2247 l
333.427 33.6568 l
336.308 33.1698 l
339.159 32.7115 l
342.225 32.2445 l
345.303 31.8025 l
348.104 31.4235 l
351.078 31.0449 l
353.981 30.6992 l
357.128 30.3506 l
359.850 30.0709 l
362.977 29.7745 l
365.917 29.5201 l
368.828 29.2911 l
371.741 29.0847 l
374.713 28.8976 l
377.862 28.7250 l
380.750 28.5900 l
383.601 28.4783 l
386.649 28.3828 l
389.690 28.3119 l
392.419 28.2692 l
395.652 28.2439 l
398.357 28.2439 l
401.522 28.2684 l
404.541 28.3165 l
407.238 28.3797 l
410.270 28.4738 l
413.323 28.5931 l
416.361 28.7364 l
419.177 28.8912 l
422.094 29.0737 l
425.110 29.2865 l
428.117 29.5229 l
431.209 29.7915 l
433.933 30.0496 l
437.000 30.3643 l
440.079 30.7062 l
443.046 31.0604 l
445.741 31.4032 l
448.945 31.8373 l
451.659 32.2276 l
454.816 32.7078 l
457.611 33.1567 l
460.677 33.6751 l
463.597 34.1941 l
466.644 34.7624 l
469.442 35.3085 l
472.459 35.9239 l
475.594 36.5924 l
478.323 37.1989 l
481.270 37.8799 l
484.314 38.6122 l
487.293 39.3572 l
490.175 40.1053 l
493.374 40.9679 l
496.250 41.7722 l
499.320 42.6619 l
502.101 43.4961 l
505.143 44.4392 l
508.004 45.3568 l
510.995 46.3477 l
513.920 47.3485 l
516.981 48.4310 l
519.930 49.5077 l
522.945 50.6444 l
525.936 51.8079 l
528.683 52.9097 l
531.833 54.2117 l
534.650 55.4127 l
537.653 56.7321 l
540.528 58.0335 l
543.720 59.5241 l
546.483 60.8546 l
549.621 62.4108 l
552.480 63.8732 l
555.607 65.5223 l
558.305 66.9882 l
561.379 68.7078 l
564.347 70.4212 l
567.314 72.1868 l
570.270 74.0009 l
573.109 75.7972 l
576.179 77.8003 l
579.104 79.7711 l
582.183 81.9128 l
584.970 83.9139 l
588.051 86.1973 l
591.001 88.4581 l
593.945 90.7884 l
597.019 93.3063 l
599.850 95.7046 l
602.750 98.2432 l
605.952 101.147 l
608.851 103.873 l
611.816 106.761 l
614.831 109.806 l
617.602 112.707 l
620.557 115.912 l
623.488 119.213 l
626.625 122.884 l
629.392 126.250 l
632.585 130.290 l
635.467 134.087 l
638.318 137.994 l
641.384 142.369 l
644.462 146.955 l
647.263 151.306 l
650.237 156.121 l
653.140 161.025 l
656.286 166.584 l
659.009 171.610 l
662.135 177.644 l
665.075 183.585 l
667.986 189.742 l
670.899 196.191 l
673.871 203.083 l
677.021 210.756 l
679.909 218.143 l
682.760 225.785 l
685.807 234.362 l
688.848 243.366 l
691.715 252.287 l
S
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
100.284 2.57063E-3 594.430 391.997 rc
newpath
102.284 140.715 m
105.383 150.339 l
108.080 158.314 l
111.112 166.866 l
114.164 175.053 l
117.202 182.805 l
120.019 189.659 l
122.935 196.438 l
125.952 203.127 l
128.958 209.487 l
132.051 215.727 l
134.775 220.984 l
137.841 226.648 l
140.920 232.081 l
143.888 237.088 l
146.582 241.451 l
149.786 246.425 l
152.501 250.464 l
155.658 254.975 l
158.453 258.807 l
161.519 262.847 l
164.439 266.543 l
167.486 270.251 l
170.283 273.528 l
173.301 276.934 l
176.436 280.336 l
179.164 283.191 l
182.111 286.169 l
185.156 289.136 l
188.134 291.935 l
191.016 294.552 l
194.216 297.356 l
197.091 299.788 l
200.161 302.299 l
202.943 304.501 l
205.984 306.832 l
208.846 308.955 l
211.837 311.104 l
214.761 313.139 l
217.823 315.203 l
220.771 317.129 l
223.787 319.037 l
226.777 320.871 l
229.525 322.506 l
232.674 324.325 l
235.491 325.902 l
238.495 327.535 l
241.369 329.051 l
244.561 330.683 l
247.325 332.054 l
250.462 333.565 l
253.321 334.899 l
256.449 336.316 l
259.147 337.502 l
262.220 338.813 l
265.189 340.041 l
268.155 341.230 l
271.111 342.380 l
273.951 343.450 l
277.020 344.572 l
279.946 345.607 l
283.025 346.661 l
285.812 347.586 l
288.892 348.574 l
291.843 349.489 l
294.786 350.372 l
297.861 351.261 l
300.692 352.053 l
303.592 352.835 l
306.794 353.667 l
309.693 354.392 l
312.657 355.105 l
315.673 355.802 l
318.444 356.418 l
321.398 357.049 l
324.330 357.648 l
327.466 358.261 l
330.234 358.777 l
333.427 359.345 l
336.308 359.832 l
339.159 360.291 l
342.225 360.758 l
345.303 361.200 l
348.104 361.579 l
351.078 361.957 l
353.981 362.303 l
357.128 362.651 l
359.850 362.931 l
362.977 363.228 l
365.917 363.482 l
368.828 363.711 l
371.741 363.917 l
374.713 364.104 l
377.862 364.277 l
380.750 364.412 l
383.601 364.524 l
386.649 364.619 l
389.690 364.690 l
392.419 364.733 l
395.652 364.758 l
398.357 364.758 l
401.522 364.734 l
404.541 364.686 l
407.238 364.622 l
410.270 364.528 l
413.323 364.409 l
416.361 364.266 l
419.177 364.111 l
422.094 363.928 l
425.110 363.716 l
428.117 363.479 l
431.209 363.211 l
433.933 362.952 l
437.000 362.638 l
440.079 362.296 l
443.046 361.942 l
445.741 361.599 l
448.945 361.165 l
451.659 360.775 l
454.816 360.294 l
457.611 359.845 l
460.677 359.327 l
463.597 358.808 l
466.644 358.240 l
469.442 357.694 l
472.459 357.078 l
475.594 356.410 l
478.323 355.803 l
481.270 355.122 l
484.314 354.390 l
487.293 353.645 l
490.175 352.897 l
493.374 352.034 l
496.250 351.230 l
499.320 350.340 l
502.101 349.506 l
505.143 348.563 l
508.004 347.645 l
510.995 346.654 l
513.920 345.654 l
516.981 344.571 l
519.930 343.494 l
522.945 342.358 l
525.936 341.194 l
528.683 340.092 l
531.833 338.790 l
534.650 337.589 l
537.653 336.270 l
540.528 334.969 l
543.720 333.478 l
546.483 332.147 l
549.621 330.591 l
552.480 329.129 l
555.607 327.480 l
558.305 326.014 l
561.379 324.294 l
564.347 322.581 l
567.314 320.815 l
570.270 319.001 l
573.109 317.205 l
576.179 315.202 l
579.104 313.231 l
582.183 311.089 l
584.970 309.088 l
588.051 306.805 l
591.001 304.544 l
593.945 302.214 l
597.019 299.696 l
599.850 297.297 l
602.750 294.759 l
605.952 291.854 l
608.851 289.128 l
611.816 286.240 l
614.831 283.195 l
617.602 280.294 l
620.557 277.090 l
623.488 273.789 l
626.625 270.118 l
629.392 266.752 l
632.585 262.712 l
635.467 258.914 l
638.318 255.008 l
641.384 250.632 l
644.462 246.046 l
647.263 241.696 l
650.237 236.881 l
653.140 231.976 l
656.286 226.417 l
659.009 221.391 l
662.135 215.358 l
665.075 209.417 l
667.986 203.260 l
670.899 196.811 l
673.871 189.919 l
677.021 182.246 l
679.909 174.859 l
682.760 167.216 l
685.807 158.639 l
688.848 149.636 l
691.715 140.715 l
S
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
100.284 2.57063E-3 594.430 391.997 rc
newpath
332.695 390.000 m
345.972 387.965 l
356.988 386.194 l
368.816 384.204 l
380.154 382.199 l
390.905 380.205 l
400.424 378.355 l
409.850 376.441 l
419.163 374.460 l
428.031 372.486 l
436.744 370.456 l
444.093 368.667 l
452.023 366.654 l
459.639 364.633 l
466.667 362.684 l
472.799 360.915 l
479.798 358.811 l
485.491 357.029 l
491.854 354.956 l
497.268 353.121 l
502.982 351.108 l
508.215 349.191 l
513.471 347.191 l
518.122 345.354 l
522.961 343.373 l
527.801 341.315 l
531.867 339.523 l
536.111 337.588 l
540.344 335.589 l
544.343 333.634 l
548.083 331.741 l
552.095 329.641 l
555.579 327.753 l
559.179 325.737 l
562.338 323.911 l
565.684 321.914 l
568.734 320.035 l
571.825 318.072 l
574.754 316.151 l
577.725 314.141 l
580.499 312.205 l
583.251 310.226 l
585.896 308.262 l
588.257 306.458 l
590.884 304.390 l
593.163 302.541 l
595.523 300.569 l
597.716 298.682 l
600.078 296.586 l
602.063 294.771 l
604.250 292.712 l
606.185 290.834 l
608.237 288.781 l
609.957 287.009 l
611.859 284.992 l
613.640 283.043 l
615.367 281.095 l
617.035 279.154 l
618.590 277.290 l
620.219 275.275 l
621.723 273.354 l
623.256 271.332 l
624.599 269.502 l
626.036 267.480 l
627.367 265.543 l
628.651 263.610 l
629.945 261.592 l
631.097 259.733 l
632.236 257.829 l
633.447 255.726 l
634.502 253.823 l
635.540 251.877 l
636.555 249.897 l
637.452 248.077 l
638.371 246.138 l
639.244 244.213 l
640.137 242.154 l
640.889 240.337 l
641.717 238.240 l
642.427 236.348 l
643.095 234.476 l
643.775 232.464 l
644.420 230.442 l
644.972 228.604 l
645.524 226.651 l
646.028 224.745 l
646.537 222.679 l
646.945 220.892 l
647.377 218.839 l
647.748 216.909 l
648.082 214.997 l
648.383 213.085 l
648.656 211.134 l
648.908 209.066 l
649.105 207.169 l
649.267 205.298 l
649.407 203.297 l
649.510 201.300 l
649.572 199.508 l
649.609 197.386 l
649.609 195.609 l
649.573 193.532 l
649.503 191.549 l
649.411 189.779 l
649.274 187.788 l
649.100 185.784 l
648.891 183.789 l
648.665 181.940 l
648.399 180.025 l
648.089 178.045 l
647.744 176.071 l
647.352 174.040 l
646.976 172.252 l
646.517 170.238 l
646.018 168.217 l
645.502 166.269 l
645.002 164.499 l
644.369 162.396 l
643.800 160.614 l
643.100 158.541 l
642.446 156.706 l
641.690 154.692 l
640.934 152.775 l
640.106 150.775 l
639.310 148.938 l
638.414 146.957 l
637.440 144.899 l
636.557 143.107 l
635.565 141.172 l
634.499 139.173 l
633.414 137.218 l
632.325 135.326 l
631.070 133.225 l
629.899 131.337 l
628.605 129.322 l
627.392 127.495 l
626.020 125.498 l
624.686 123.620 l
623.246 121.656 l
621.791 119.736 l
620.218 117.726 l
618.654 115.790 l
617.003 113.810 l
615.314 111.846 l
613.715 110.042 l
611.826 107.975 l
610.084 106.125 l
608.171 104.153 l
606.285 102.266 l
604.125 100.170 l
602.198 98.3559 l
599.945 96.2962 l
597.829 94.4191 l
595.444 92.3657 l
593.324 90.5940 l
590.840 88.5763 l
588.365 86.6272 l
585.816 84.6795 l
583.199 82.7389 l
580.609 80.8746 l
577.723 78.8592 l
574.885 76.9384 l
571.804 74.9169 l
568.926 73.0869 l
565.645 71.0644 l
562.399 69.1272 l
559.056 67.1948 l
555.447 65.1763 l
552.012 63.3172 l
548.379 61.4133 l
544.227 59.3111 l
540.333 57.4077 l
536.213 55.4612 l
531.872 53.4816 l
527.742 51.6620 l
523.184 49.7223 l
518.493 47.7974 l
513.283 45.7384 l
508.510 43.9214 l
502.790 41.8249 l
497.419 39.9330 l
491.901 38.0611 l
485.727 36.0482 l
479.266 34.0271 l
473.144 32.1882 l
466.376 30.2355 l
459.492 28.3297 l
451.699 26.2639 l
444.663 24.4763 l
436.228 22.4233 l
427.933 20.4933 l
419.349 18.5820 l
410.368 16.6692 l
400.784 14.7182 l
390.129 12.6502 l
379.885 10.7540 l
369.301 8.88232 l
357.437 6.88147 l
345.001 4.88491 l
332.695 3.00256 l
S
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
100.284 2.57063E-3 594.430 391.997 rc
newpath
461.304 390.000 m
448.027 387.965 l
437.011 386.194 l
425.183 384.204 l
413.845 382.199 l
403.094 380.205 l
393.575 378.355 l
384.149 376.441 l
374.836 374.460 l
365.968 372.486 l
357.255 370.456 l
349.906 368.667 l
341.976 366.654 l
334.361 364.633 l
327.332 362.684 l
321.200 360.915 l
314.201 358.811 l
308.508 357.029 l
302.145 354.956 l
296.732 353.121 l
291.017 351.108 l
285.784 349.191 l
280.528 347.191 l
275.877 345.354 l
271.038 343.373 l
266.198 341.315 l
262.132 339.523 l
257.888 337.588 l
253.655 335.589 l
249.657 333.634 l
245.916 331.741 l
241.904 329.641 l
238.420 327.753 l
234.820 325.737 l
231.661 323.911 l
228.315 321.914 l
225.265 320.035 l
222.174 318.072 l
219.246 316.151 l
216.274 314.141 l
213.500 312.205 l
210.748 310.226 l
208.103 308.262 l
205.742 306.458 l
203.115 304.390 l
200.836 302.541 l
198.476 300.569 l
196.283 298.682 l
193.921 296.586 l
191.936 294.771 l
189.749 292.712 l
187.815 290.834 l
185.762 288.781 l
184.042 287.009 l
182.140 284.992 l
180.359 283.043 l
178.632 281.095 l
176.964 279.154 l
175.409 277.290 l
173.780 275.275 l
172.276 273.354 l
170.743 271.332 l
169.400 269.502 l
167.963 267.480 l
166.632 265.543 l
165.348 263.610 l
164.054 261.592 l
162.902 259.733 l
161.764 257.829 l
160.553 255.726 l
159.498 253.823 l
158.459 251.877 l
157.444 249.897 l
156.547 248.077 l
155.628 246.138 l
154.755 244.213 l
153.862 242.154 l
153.110 240.337 l
152.282 238.240 l
151.572 236.348 l
150.904 234.476 l
150.224 232.464 l
149.579 230.442 l
149.027 228.604 l
148.475 226.651 l
147.971 224.745 l
147.462 222.679 l
147.055 220.892 l
146.622 218.839 l
146.251 216.909 l
145.917 214.997 l
145.616 213.085 l
145.343 211.134 l
145.092 209.066 l
144.895 207.169 l
144.732 205.298 l
144.592 203.297 l
144.489 201.300 l
144.427 199.508 l
144.390 197.386 l
144.390 195.609 l
144.426 193.532 l
144.496 191.549 l
144.588 189.779 l
144.725 187.788 l
144.899 185.784 l
145.108 183.789 l
145.334 181.940 l
145.600 180.025 l
145.911 178.045 l
146.255 176.071 l
146.647 174.040 l
147.023 172.252 l
147.482 170.238 l
147.981 168.217 l
148.497 166.269 l
148.997 164.499 l
149.630 162.396 l
150.199 160.614 l
150.899 158.541 l
151.553 156.706 l
152.309 154.692 l
153.065 152.775 l
153.893 150.775 l
154.689 148.938 l
155.585 146.957 l
156.559 144.899 l
157.442 143.107 l
158.434 141.172 l
159.500 139.173 l
160.585 137.218 l
161.674 135.326 l
162.929 133.225 l
164.100 131.337 l
165.394 129.322 l
166.608 127.495 l
167.979 125.498 l
169.313 123.620 l
170.754 121.656 l
172.208 119.736 l
173.781 117.726 l
175.345 115.790 l
176.996 113.810 l
178.685 111.846 l
180.284 110.042 l
182.173 107.975 l
183.915 106.125 l
185.828 104.153 l
187.714 102.266 l
189.874 100.170 l
191.801 98.3559 l
194.054 96.2962 l
196.170 94.4191 l
198.555 92.3657 l
200.675 90.5940 l
203.160 88.5763 l
205.634 86.6272 l
208.183 84.6795 l
210.800 82.7389 l
213.390 80.8746 l
216.276 78.8592 l
219.114 76.9384 l
222.196 74.9169 l
225.073 73.0869 l
228.354 71.0644 l
231.600 69.1272 l
234.943 67.1948 l
238.552 65.1763 l
241.987 63.3172 l
245.620 61.4133 l
249.772 59.3111 l
253.666 57.4077 l
257.786 55.4612 l
262.127 53.4816 l
266.257 51.6620 l
270.816 49.7223 l
275.506 47.7974 l
280.716 45.7384 l
285.489 43.9214 l
291.210 41.8249 l
296.580 39.9330 l
302.098 38.0611 l
308.272 36.0482 l
314.734 34.0271 l
320.855 32.1882 l
327.623 30.2355 l
334.507 28.3297 l
342.300 26.2639 l
349.336 24.4763 l
357.771 22.4233 l
366.066 20.4933 l
374.650 18.5820 l
383.631 16.6692 l
393.215 14.7182 l
403.870 12.6502 l
414.114 10.7540 l
424.698 8.88232 l
436.562 6.88147 l
448.998 4.88491 l
461.304 3.00256 l
S
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
102.284 196.501 m
691.715 196.501 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
540 223 8 15 rc
Q
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
144.386 196.501 m
144.386 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
141 211 8 16 rc
newpath
153.453 219.890 m
143.546 219.890 l
143.546 219.109 l
153.453 219.109 l
153.453 219.890 l
h
f
Q
newpath
151.765 215.953 m
152.046 215.286 152.403 214.770 152.835 214.406  c
153.268 214.041 153.807 213.859 154.453 213.859  c
155.244 213.859 155.854 214.119 156.281 214.640  c
156.604 215.026 156.765 215.437 156.765 215.875  c
156.765 216.604 156.312 217.354 155.406 218.125  c
156.010 218.364 156.468 218.705 156.781 219.148  c
157.093 219.591 157.250 220.114 157.250 220.718  c
157.250 221.572 156.979 222.312 156.437 222.937  c
155.718 223.760 154.687 224.171 153.343 224.171  c
152.666 224.171 152.208 224.088 151.968 223.921  c
151.729 223.755 151.609 223.578 151.609 223.390  c
151.609 223.244 151.666 223.119 151.781 223.015  c
151.895 222.911 152.031 222.859 152.187 222.859  c
152.312 222.859 152.437 222.880 152.562 222.921  c
152.645 222.942 152.835 223.028 153.132 223.179  c
153.429 223.330 153.630 223.421 153.734 223.453  c
153.921 223.505 154.114 223.531 154.312 223.531  c
154.812 223.531 155.247 223.338 155.617 222.953  c
155.987 222.567 156.171 222.114 156.171 221.593  c
156.171 221.208 156.088 220.833 155.921 220.468  c
155.786 220.187 155.645 219.979 155.500 219.843  c
155.291 219.645 155.002 219.468 154.632 219.312  c
154.263 219.156 153.890 219.078 153.515 219.078  c
153.281 219.078 l
153.281 218.843 l
153.666 218.802 154.052 218.666 154.437 218.437  c
154.822 218.208 155.104 217.932 155.281 217.609  c
155.458 217.286 155.546 216.932 155.546 216.546  c
155.546 216.046 155.390 215.640 155.078 215.328  c
154.765 215.015 154.375 214.859 153.906 214.859  c
153.145 214.859 152.510 215.265 152.000 216.078  c
151.765 215.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
228.591 196.501 m
228.591 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
225 211 8 16 rc
newpath
237.453 219.890 m
227.546 219.890 l
227.546 219.109 l
237.453 219.109 l
237.453 219.890 l
h
f
Q
newpath
241.875 222.093 m
241.187 224.000 l
235.328 224.000 l
235.328 223.734 l
237.046 222.161 238.257 220.875 238.960 219.875  c
239.664 218.875 240.015 217.963 240.015 217.140  c
240.015 216.515 239.822 216.000 239.437 215.593  c
239.052 215.187 238.588 214.984 238.046 214.984  c
237.567 214.984 237.132 215.127 236.742 215.414  c
236.351 215.700 236.062 216.119 235.875 216.671  c
235.609 216.671 l
235.734 215.765 236.049 215.070 236.554 214.585  c
237.059 214.101 237.687 213.859 238.437 213.859  c
239.250 213.859 239.924 214.119 240.460 214.640  c
240.997 215.161 241.265 215.770 241.265 216.468  c
241.265 216.968 241.151 217.474 240.921 217.984  c
240.557 218.776 239.968 219.609 239.156 220.484  c
237.947 221.817 237.187 222.619 236.875 222.890  c
239.468 222.890 l
240.000 222.890 240.372 222.872 240.585 222.835  c
240.799 222.799 240.992 222.721 241.164 222.601  c
241.335 222.481 241.484 222.312 241.609 222.093  c
241.875 222.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
312.795 196.501 m
312.795 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
309 211 8 16 rc
newpath
321.453 219.890 m
311.546 219.890 l
311.546 219.109 l
321.453 219.109 l
321.453 219.890 l
h
f
Q
newpath
320.765 215.046 m
323.171 213.859 l
323.421 213.859 l
323.421 222.250 l
323.421 222.802 323.445 223.148 323.492 223.289  c
323.539 223.429 323.635 223.536 323.781 223.609  c
323.927 223.682 324.224 223.724 324.671 223.734  c
324.671 224.000 l
320.937 224.000 l
320.937 223.734 l
321.406 223.724 321.708 223.682 321.843 223.609  c
321.979 223.536 322.072 223.440 322.125 223.320  c
322.177 223.200 322.203 222.843 322.203 222.250  c
322.203 216.890 l
322.203 216.161 322.182 215.697 322.140 215.500  c
322.099 215.343 322.033 215.229 321.945 215.156  c
321.856 215.083 321.750 215.046 321.625 215.046  c
321.437 215.046 321.187 215.119 320.875 215.265  c
320.765 215.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 196.501 m
397.000 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.546 216.093 m
392.546 214.958 392.716 213.981 393.054 213.164  c
393.393 212.346 393.849 211.739 394.421 211.343  c
394.859 211.020 395.312 210.859 395.781 210.859  c
396.541 210.859 397.224 211.250 397.828 212.031  c
398.588 212.989 398.968 214.291 398.968 215.937  c
398.968 217.093 398.802 218.072 398.468 218.875  c
398.135 219.677 397.710 220.260 397.195 220.625  c
396.679 220.989 396.182 221.171 395.703 221.171  c
394.755 221.171 393.968 220.614 393.343 219.500  c
392.812 218.552 392.546 217.416 392.546 216.093  c
h
393.984 216.281 m
393.984 217.645 394.151 218.760 394.484 219.625  c
394.765 220.354 395.182 220.718 395.734 220.718  c
395.994 220.718 396.265 220.599 396.546 220.359  c
396.828 220.119 397.041 219.724 397.187 219.171  c
397.416 218.328 397.531 217.140 397.531 215.609  c
397.531 214.484 397.411 213.541 397.171 212.781  c
397.005 212.218 396.781 211.822 396.500 211.593  c
396.302 211.427 396.057 211.343 395.765 211.343  c
395.442 211.343 395.151 211.494 394.890 211.796  c
394.536 212.203 394.296 212.841 394.171 213.710  c
394.046 214.580 393.984 215.437 393.984 216.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
481.204 196.501 m
481.204 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
484.765 215.046 m
487.171 213.859 l
487.421 213.859 l
487.421 222.250 l
487.421 222.802 487.445 223.148 487.492 223.289  c
487.539 223.429 487.635 223.536 487.781 223.609  c
487.927 223.682 488.224 223.724 488.671 223.734  c
488.671 224.000 l
484.937 224.000 l
484.937 223.734 l
485.406 223.724 485.708 223.682 485.843 223.609  c
485.979 223.536 486.072 223.440 486.125 223.320  c
486.177 223.200 486.203 222.843 486.203 222.250  c
486.203 216.890 l
486.203 216.161 486.182 215.697 486.140 215.500  c
486.099 215.343 486.033 215.229 485.945 215.156  c
485.856 215.083 485.750 215.046 485.625 215.046  c
485.437 215.046 485.187 215.119 484.875 215.265  c
484.765 215.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
565.408 196.501 m
565.408 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
573.875 222.093 m
573.187 224.000 l
567.328 224.000 l
567.328 223.734 l
569.046 222.161 570.257 220.875 570.960 219.875  c
571.664 218.875 572.015 217.963 572.015 217.140  c
572.015 216.515 571.822 216.000 571.437 215.593  c
571.052 215.187 570.588 214.984 570.046 214.984  c
569.567 214.984 569.132 215.127 568.742 215.414  c
568.351 215.700 568.062 216.119 567.875 216.671  c
567.609 216.671 l
567.734 215.765 568.049 215.070 568.554 214.585  c
569.059 214.101 569.687 213.859 570.437 213.859  c
571.250 213.859 571.924 214.119 572.460 214.640  c
572.997 215.161 573.265 215.770 573.265 216.468  c
573.265 216.968 573.151 217.474 572.921 217.984  c
572.557 218.776 571.968 219.609 571.156 220.484  c
569.947 221.817 569.187 222.619 568.875 222.890  c
571.468 222.890 l
572.000 222.890 572.372 222.872 572.585 222.835  c
572.799 222.799 572.992 222.721 573.164 222.601  c
573.335 222.481 573.484 222.312 573.609 222.093  c
573.875 222.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
649.613 196.501 m
649.613 202.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
651.765 215.953 m
652.046 215.286 652.403 214.770 652.835 214.406  c
653.268 214.041 653.807 213.859 654.453 213.859  c
655.244 213.859 655.854 214.119 656.281 214.640  c
656.604 215.026 656.765 215.437 656.765 215.875  c
656.765 216.604 656.312 217.354 655.406 218.125  c
656.010 218.364 656.468 218.705 656.781 219.148  c
657.093 219.591 657.250 220.114 657.250 220.718  c
657.250 221.572 656.979 222.312 656.437 222.937  c
655.718 223.760 654.687 224.171 653.343 224.171  c
652.666 224.171 652.208 224.088 651.968 223.921  c
651.729 223.755 651.609 223.578 651.609 223.390  c
651.609 223.244 651.666 223.119 651.781 223.015  c
651.895 222.911 652.031 222.859 652.187 222.859  c
652.312 222.859 652.437 222.880 652.562 222.921  c
652.645 222.942 652.835 223.028 653.132 223.179  c
653.429 223.330 653.630 223.421 653.734 223.453  c
653.921 223.505 654.114 223.531 654.312 223.531  c
654.812 223.531 655.247 223.338 655.617 222.953  c
655.987 222.567 656.171 222.114 656.171 221.593  c
656.171 221.208 656.088 220.833 655.921 220.468  c
655.786 220.187 655.645 219.979 655.500 219.843  c
655.291 219.645 655.002 219.468 654.632 219.312  c
654.263 219.156 653.890 219.078 653.515 219.078  c
653.281 219.078 l
653.281 218.843 l
653.666 218.802 654.052 218.666 654.437 218.437  c
654.822 218.208 655.104 217.932 655.281 217.609  c
655.458 217.286 655.546 216.932 655.546 216.546  c
655.546 216.046 655.390 215.640 655.078 215.328  c
654.765 215.015 654.375 214.859 653.906 214.859  c
653.145 214.859 652.510 215.265 652.000 216.078  c
651.765 215.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
102.284 196.501 m
102.284 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
186.489 196.501 m
186.489 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
270.693 196.501 m
270.693 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
354.897 196.501 m
354.897 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
439.102 196.501 m
439.102 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
523.306 196.501 m
523.306 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
607.511 196.501 m
607.511 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
691.715 196.501 m
691.715 199.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
397.000 390.000 m
397.000 3.00256 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
355 92 8 15 rc
Q
cliprestore
newpath
0 0 m
0 393.000 l
795.000 393.000 l
795.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
397.000 364.761 m
390.960 364.761 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
375 362 8 16 rc
newpath
387.453 370.890 m
377.546 370.890 l
377.546 370.109 l
387.453 370.109 l
387.453 370.890 l
h
f
Q
newpath
391.875 373.093 m
391.187 375.000 l
385.328 375.000 l
385.328 374.734 l
387.046 373.161 388.257 371.875 388.960 370.875  c
389.664 369.875 390.015 368.963 390.015 368.140  c
390.015 367.515 389.822 367.000 389.437 366.593  c
389.052 366.187 388.588 365.984 388.046 365.984  c
387.567 365.984 387.132 366.127 386.742 366.414  c
386.351 366.700 386.062 367.119 385.875 367.671  c
385.609 367.671 l
385.734 366.765 386.049 366.070 386.554 365.585  c
387.059 365.101 387.687 364.859 388.437 364.859  c
389.250 364.859 389.924 365.119 390.460 365.640  c
390.997 366.161 391.265 366.770 391.265 367.468  c
391.265 367.968 391.151 368.474 390.921 368.984  c
390.557 369.776 389.968 370.609 389.156 371.484  c
387.947 372.817 387.187 373.619 386.875 373.890  c
389.468 373.890 l
390.000 373.890 390.372 373.872 390.585 373.835  c
390.799 373.799 390.992 373.721 391.164 373.601  c
391.335 373.481 391.484 373.312 391.609 373.093  c
391.875 373.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 280.631 m
390.960 280.631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
375 278 8 16 rc
newpath
387.453 286.890 m
377.546 286.890 l
377.546 286.109 l
387.453 286.109 l
387.453 286.890 l
h
f
Q
newpath
386.765 282.046 m
389.171 280.859 l
389.421 280.859 l
389.421 289.250 l
389.421 289.802 389.445 290.148 389.492 290.289  c
389.539 290.429 389.635 290.536 389.781 290.609  c
389.927 290.682 390.224 290.724 390.671 290.734  c
390.671 291.000 l
386.937 291.000 l
386.937 290.734 l
387.406 290.724 387.708 290.682 387.843 290.609  c
387.979 290.536 388.072 290.440 388.125 290.320  c
388.177 290.200 388.203 289.843 388.203 289.250  c
388.203 283.890 l
388.203 283.161 388.182 282.697 388.140 282.500  c
388.099 282.343 388.033 282.229 387.945 282.156  c
387.856 282.083 387.750 282.046 387.625 282.046  c
387.437 282.046 387.187 282.119 386.875 282.265  c
386.765 282.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 196.501 m
390.960 196.501 l
S
Q
q
0 w
newpath
397.000 112.371 m
390.960 112.371 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
386.765 114.046 m
389.171 112.859 l
389.421 112.859 l
389.421 121.250 l
389.421 121.802 389.445 122.148 389.492 122.289  c
389.539 122.429 389.635 122.536 389.781 122.609  c
389.927 122.682 390.224 122.724 390.671 122.734  c
390.671 123.000 l
386.937 123.000 l
386.937 122.734 l
387.406 122.724 387.708 122.682 387.843 122.609  c
387.979 122.536 388.072 122.440 388.125 122.320  c
388.177 122.200 388.203 121.843 388.203 121.250  c
388.203 115.890 l
388.203 115.161 388.182 114.697 388.140 114.500  c
388.099 114.343 388.033 114.229 387.945 114.156  c
387.856 114.083 387.750 114.046 387.625 114.046  c
387.437 114.046 387.187 114.119 386.875 114.265  c
386.765 114.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 28.2415 m
390.960 28.2415 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
391.875 37.0937 m
391.187 39.0000 l
385.328 39.0000 l
385.328 38.7343 l
387.046 37.1614 388.257 35.8750 388.960 34.8750  c
389.664 33.8750 390.015 32.9635 390.015 32.1406  c
390.015 31.5156 389.822 31.0000 389.437 30.5937  c
389.052 30.1875 388.588 29.9843 388.046 29.9843  c
387.567 29.9843 387.132 30.1276 386.742 30.4140  c
386.351 30.7005 386.062 31.1197 385.875 31.6718  c
385.609 31.6718 l
385.734 30.7656 386.049 30.0703 386.554 29.5859  c
387.059 29.1015 387.687 28.8593 388.437 28.8593  c
389.250 28.8593 389.924 29.1197 390.460 29.6406  c
390.997 30.1614 391.265 30.7708 391.265 31.4687  c
391.265 31.9687 391.151 32.4739 390.921 32.9843  c
390.557 33.7760 389.968 34.6093 389.156 35.4843  c
387.947 36.8177 387.187 37.6197 386.875 37.8906  c
389.468 37.8906 l
390.000 37.8906 390.372 37.8724 390.585 37.8359  c
390.799 37.7994 390.992 37.7213 391.164 37.6015  c
391.335 37.4817 391.484 37.3125 391.609 37.0937  c
391.875 37.0937 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 322.696 m
393.980 322.696 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 238.566 m
393.980 238.566 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 154.436 m
393.980 154.436 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
397.000 70.3064 m
393.980 70.3064 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 805 403 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
